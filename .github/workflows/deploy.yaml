name: NODE-APP
on:
  push:
    branches:
    - '**'
  pull_request:
    branches:
    - '**'
jobs:
  Install_depencies_and_test:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: 16

    - name: Install dependencies
      run: npm install

    - name: Unit Test
      run: npm test

  Build_image:
    runs-on: ubuntu-latest
    needs: [Install_depencies_and_test]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    
    - name: Docker_Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: build and push image 
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME}}/seamlesshr:latest

  deploy_to_prod:
    runs-on: ubuntu-latest
    if: endsWith(github.ref, '/master')
    needs: [Install_depencies_and_test, Build_image]
    environment: 'prod'

    steps:
    - name: SSH and deploy to server
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY  }}
        HOSTNAME : ${{ secrets.HOSTNAME  }}
        USER_NAME : ${{ secrets.USER_NAME  }}
          
      run: |
        echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
        ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
          cd /home/ubuntu &&
          docker-compose up -d
        ' 

  deploy_to_dev:
    runs-on: ubuntu-latest
    if: endsWith(github.ref, '/dev')
    needs: [Install_depencies_and_test, Build_image]
    environment: 'dev'
    outputs:
      build_number: ${{ steps.buildnumber.outputs.build_number }}

    steps:
      - name: Generate build number
        id: buildnumber
        uses: onyxmueller/build-tag-number@v1
        with:
          token: ${{secrets.github_token}}  
      - name: Another step as an example
        uses: actions/hello-world-docker-action@v1
        with:
          who-to-greet: ${{ steps.buildnumber.outputs.build_number }}
      - name: Test
        run: echo "I am just checking"
     